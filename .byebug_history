exit
c
comment_params
params
c
comment_params
params
c
v
     @comment
c
params
@comment
c
params
c
params
c
params
c
params
exit
n
comment_params[:parent_comment_id].present?
comment_params= {body: 'comment', parent_comment_id: 2}
{body: 'comment', parent_comment_id: 2}
comment_params[:parent_comment_id]
comment_params[:parent_comment_id].present?
comment_params = {"body"=>1 , "parent_comment_id" =>2}
comment_params = {body=>1 , parent_comment_id =>2}
comment_params
comment_params[:parent_comment_id] = 1
comment_params[:parent_comment_id]
comment_params[:parent_comment_id].present
comment_params
comment_params[:parent_comment_id].present?
n
@post = Post.find(params[:post_id])
continue
exit
continue
comment_params[:comment]
params
comment_params
params
c
params
parent_comment_id
c
params
comment_params
@post
c
comment_params
params[:post_id]
belongs_to :parent, class_name: 'Comment', optional: true
 has_many :replies, class_name: 'Comment', foreign_key: :parent_id, dependent: :destroy
exit
c
comment_params
params[:post_id]
gem 'byebug', platforms: [:mri, :mingw, :x64_mingw]
